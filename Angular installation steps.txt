installation of Angular js
------------------------------

step 1: install node JS

Step 2 : check node JS version using in cmd/IDE(webstrom) using below command

node -v
version : 8.4.0

step 3: install NPM(node package manager) 
note: if we install node.js by default npm also will be installed on the system

Step 4: check npm  version using in cmd/IDE(webstrom) using below command

npm -v

To clean the npm cache  use below command:
npm cache clean

step 5 : install angular cli on the system from cmd/IDE
command : npm install -g @angular/cli
note : -g stands global , if we use this option , one time installation of angular will be enough or else each time for each workspace we need to install angular/cli.

step 6:  check the version of angular/cli with below command
command: ng -version

step 7 : to create new angular project use the below command in the specific directory
ng new <project name>

step 8 : to run and deploy the angular project from project directory below command
ng serve


step 9 : to create new component the project.
ng g component <component name>

step 10 : to install bootstrap in to the project folder for nice css and styles
command : npm install --save bootstrap


step 11 : to skip creation of the spec/test file in a component.
command : ng g c <componentname> --spec false

step 12: to create component inside the component and not directly under app folder.
command : ng g c <parentcomponent>/<componentname> --spec false

step 13: if node-modules folder is missing in the project , we cannot run ng serve on that project so first we need to create node-modules folder in the project for that need to run below command in the project directory
command : npm install


step 14: To call the backend services we can use firebase which will generate dummy REST API for us along with database.
to create our own project with DB  in the firebase visit to 
http://firebase.google.com

step 15: To implement authentication in Angular we can use firebase authentication called firebase with SDK, for this usage we need to install firebase in our project
command: npm install --save firebase 


step 16: regarding compliation of angular project.

compiling and coverting type script code to JS is taken care by cli.(Angular is not involved in this process)
They what does the angular do?
Actually angular compilies the our templates(html code) to java script
on browser rendering the JS code is faster than rendering the DOM element, so the angular converts the templates to JS 


There are 2 ways of compilation -->1) Just in time compilation(JIT) 2)Ahead of time compilation(AOT).

1) Just in time compilation--> Steps followed during this type of compiliation are as below:
developement-->production(when we run ng serve command the developed code is shipped to development server)-->App downloaded in  browser-->Angular parsed and compiles templates to javascript

this is default compilation takes place in all angular projects.
with this type of compilation along with developed code the compiler also will be shipped to browser to compile the templates to javascript so that the file size shipped to browser is of very huge.


2)Ahead of time compilation--> Steps followed during this type of compiliation are as below:
developement-->Angular parsed and compiles templates to javascript-->production(when we run with below command the parsed code is shipped to development server)-->App downloaded in  browser

Advantages of this compilation are :

*) faster startup of app in browser snice parsing and commpilation doesnt happen in browser
*) Templates get checked during development
*) smaller file size shipped to browser since unused features and compiler are stripped out 

to acheive the AOT compilation below command to be used and also the same command can u used to build the production code.
command: ng build -- prod --aot


once the above command is ran on the angular project it will create new 'dist' folder in the project which consits of code which can be deployed on the production server.



step 17: to install ngrx package in to our project, this ngrx will be used to add reducers to our project which holds the application state.

command: npm install --save @ngrx/store

step 18:
unverisal rendering: https://github.com/angular/angular-cli/wiki/stories-universal-rendering
from the above link we will get the steps how to integrate the angular unverisal in to exisiting angular cli applications

unverisal rendering means the app runs on the browser and can be rendered on the server
 to install platform server package from angular to our project.

command: npm install --save-dev @angular/platform-server

this  will download a special angular package which is required for server side rendering.

default build is client side bundle in angualar:

command: ng build --prod

After doing all the necessary configuration changes/edits to the application we need to bundle all changes and build the server bundle in dist-server
command: ng build --prod --app 1


to install the express package(popular node js framework) on to our project.
command: npm install --save express


to install nguniversal express engine package , this is rendering engine for express project  which allows us  to render our template, javascript and angualar template to html which can be served in the end

command: npm install --save @nguniversal/express-engine

to install nguniversal module map ng factory loader package, this package which allows the server side to code here correctly handle all the modules in the project and correctly load them.

command: npm install --save @nguniversal/module-map-ngfactory-loader


to run the app on our own server(configured by us) use the below command:

command: node server.js